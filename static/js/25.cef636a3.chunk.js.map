{"version":3,"file":"static/js/25.cef636a3.chunk.js","mappings":"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","sources":["components/ContactForm/ContactFormStyled.js","components/ContactForm/ContactForm.jsx","components/Contact/ContactStyled.js","components/Contact/Contact.jsx","components/ContactList/ContactListStyled.js","components/ContactList/ContactList.jsx","components/Filter/FilterStyled.js","components/Filter/Filter.jsx","components/Section/SectionStyled.js","components/Section/Section.jsx","Pages/Contacts.jsx","Pages/Home/Home.styled.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContactFormStyled = styled.form`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n\n    label{\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        font-size: 18px;\n    }\n\n    label:not(:last-child){\n        margin-bottom: 16px;\n    }\n\n    input {\n        box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n        outline: transparent;\n        border: none;\n        width: 200px;\n        height: 22px;\n    }\n\n    button {\n        padding: 6px 10px;\n        box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n        transition: box-shadow 100ms linear;\n        cursor: pointer;\n    }\n    \n    button:hover,\n    button:focus{\n        box-shadow: none;\n    }\n`","import PropTypes from 'prop-types';\nimport { ContactFormStyled } from './ContactFormStyled';\nimport { useState } from 'react';\n\n\nexport default function ContactForm ({onFormSubmit}) {\n\nconst [name, setName] = useState('');\nconst [number, setNumber] = useState('');\n\nconst handleChange = e => {\nconst {name, value} = e.target;\n\nswitch (name) {\n  case 'name': \n  setName(value);\n  break;\n\n  case 'number':\n    setNumber(value);\n    break;\n\n    default:\n      return;\n}\n};\n\nconst handleSubmit = e => {\n    e.preventDefault();\n\n    const contactData = {\n    name,\n    number};\n\nonFormSubmit(contactData);\nsetName ('');\nsetNumber('');\n};\n\n\n    return (\n<ContactFormStyled onSubmit={handleSubmit}>\n    <label>\n        Name\n    <input value={name}\n    onChange={handleChange}\n    type=\"text\"\n  name=\"name\"\n  pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n  title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n  required />\n    </label>\n        \n    <label >\n        Number\n    <input value={number} \n    onChange={handleChange}\n    type=\"tel\"\n  name=\"number\"\n  pattern=\"\\+?\\d{1,4}?[\\-.\\s]?\\(?\\d{1,3}?\\)?[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,9}\"\n  title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n  required />\n    </label>\n        \n        <button type=\"submit\">Add contact</button>\n      </ContactFormStyled>\n    )\n}\n\n\nContactForm.propTypes = {\n    onFormSubmit: PropTypes.func.isRequired,\n}\n","import styled from 'styled-components';\n\nexport const ContactListStyled = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  p:not(:last-child) {\n    margin-right: 8px;\n  }\n\n  button {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin-left: auto;\n    padding: 6px 10px;\n    width: 94px;\n    color: #030360;\n    background-color: #d3d3f5;\n    border: 1px solid blue;\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n    transition: box-shadow 100ms linear;\n    cursor: pointer;\n  }\n\n  button:hover,\n  button:focus {\n    box-shadow: none;\n    border: none;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { ContactListStyled } from './ContactStyled';\nimport { ButtonUserStyled } from 'components/UserMenu/UserMenu.styled';\n\n\nconst Contact = (props) => {\n    const {contact, deleteContact} = props;\n\n    return (\n      <ContactListStyled>\n        <p>{contact.name}:</p>\n        <p>{contact.number}</p>\n        <ButtonUserStyled onClick={() => deleteContact(contact.id)}>Delete</ButtonUserStyled>\n      </ContactListStyled>\n    );\n  };\n\n  Contact.propTypes = {\n    contact: PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired,\n    deleteContact: PropTypes.func.isRequired,\n  }\n\n  export default Contact;\n","import styled from 'styled-components';\n\nexport const ContactListStyled = styled.ul`\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nwidth: 600px;\nmargin: 0 auto;\npadding: 0;\nfont-size: 18px;\ncolor: #030360;\n`","import PropTypes from 'prop-types';\nimport Contact from \"components/Contact/Contact\";\nimport { ContactListStyled } from './ContactListStyled';\n\n\nconst ContactList = (props) => {\n    const { contacts, deleteContact } = props;\n\n    \n    return (\n      <ContactListStyled>\n        {contacts.map(contact => {\n          return (\n            <Contact\n              key={contact.id}\n            deleteContact={deleteContact}\n            contact={contact}\n            />\n          );\n        })}\n      </ContactListStyled>\n    );\n  };\n\n\n  ContactList.propTypes = {\n    contacts: PropTypes.array.isRequired,\n    deleteContact: PropTypes.func.isRequired,\n  }\n\n  export default ContactList;","import styled from 'styled-components';\n\nexport const FilterStyled = styled.section`\ninput {\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n    outline: transparent;\n    border: none;\n    width: 200px;\n    height: 22px;\n    }\n`","import PropTypes from 'prop-types';\nimport { FilterStyled } from './FilterStyled';\n\n\nexport default function Filter(props) {\n  const { filterValue, filterContact } = props;\n\n  const handleInputChange = event => {\n    filterContact(event.target.value);\n  };\n\n  return (\n    <FilterStyled>\n      <input\n        value={filterValue}\n        onChange={handleInputChange}\n        type=\"text\"\n        name=\"search\"\n      />\n    </FilterStyled>\n  );\n}\n\nFilter.propTypes = {\n  filterContact: PropTypes.func.isRequired,\n  filterValue: PropTypes.string.isRequired,\n};\n","\nimport styled from 'styled-components';\n\nexport const SectionStyled = styled.section`\n  box-sizing: border-box;\n  border: 1px solid blue;\n  margin: 30px auto;\n  padding: 15px;\n  width: 600px;\n  text-align: center;\n  font-size: 18px;\n  border-radius: 10px;\n  color: #030360;\n  background-color: #d3d3f5;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  `","\nimport PropTypes from 'prop-types';\nimport { SectionStyled } from './SectionStyled';\n\n\nconst Section = ({title, children}) => {\n    return (\n        <SectionStyled>\n            {<h1>{title}</h1>}\n            {children}\n        </SectionStyled>\n    )\n    }\n    \n    Section.propTypes = {\n        title: PropTypes.string,\n        children: PropTypes.node.isRequired,\n    }\n\n    export default Section;\n","import ContactForm from \"components/ContactForm/ContactForm\";\nimport ContactList from \"components/ContactList/ContactList\";\nimport Filter from \"components/Filter/Filter\";\nimport Loader from \"components/Loader/Loader\";\nimport Section from \"components/Section/Section\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addContactThunk, deleteContactThunk, getAllContactsThunk } from \"redux/contacts/contactsThunks\";\nimport { selectContacts, selectError, selectFilter, selectIsLoading } from \"redux/contacts/selectors\";\nimport { PagesStyled } from \"./Home/Home.styled\";\nimport { selectUser } from \"redux/auth/selectors\";\nimport { filterContacts } from \"redux/contacts/contactsSlice\";\n\n\nexport default function Contacts() {\n \nconst dispatch = useDispatch();\nconst items = useSelector(selectContacts);\nconst filter = useSelector(selectFilter);\nconst user = useSelector(selectUser);\nconst isLoading = useSelector(selectIsLoading);\nconst error = useSelector(selectError);\n\n\nuseEffect(() => {\n  if (!user) return;\n  dispatch(getAllContactsThunk())\n}, [dispatch, user]);\n\nconst addContact = (contactData) => {\n  const existContact = items.find(contact => \n  contact.name === contactData.name)\n  \n    if (existContact) {\n   alert(`${contactData.name} is already in contacts.`) \n  }\n   else {\n  dispatch(addContactThunk(contactData));\n    }\n  }\n\nconst deleteContact = id => {\n  dispatch(deleteContactThunk(id));\n};\n\nconst filterContact = filterName => {\n  dispatch(filterContacts(filterName));\n}\n\nconst filteredContacts = items.filter(contact => \n  contact.name\n.toLowerCase()\n.includes(filter\n .toLowerCase().trim()));\n\n\n  return (\n<PagesStyled>\n  <Section title =\"Phonebook\">\n    <ContactForm \n    onFormSubmit={addContact}\n    />\n    </Section>\n\n    <Section>\n    <h2>Contacts</h2>\n    <Filter\n    title=\"Find contacts by name\"\n    filterValue={filter} \n    filterContact={filterContact}\n    />\n    </Section>\n\n    {error && (\n        <div>\n          <p>Opps, some error occured... Error: {error}</p>\n        </div>\n      )}\n      {isLoading && (\n        <div>\n          <Loader />\n        </div>\n      )}\n\n{items?.length > 0 && (\n    <ContactList \n    contacts={filteredContacts}\n    deleteContact={deleteContact}\n     />\n      )}\n     </PagesStyled>\n  )\n};","import styled from \"styled-components\";\n\n\nexport const PagesStyled = styled.div`\ndisplay: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin-top: 0;\nbackground-image: radial-gradient(circle, rgba(151,169,235,0.30996148459383754) 0%, rgba(223,212,247,0.27354691876750703) 100%);\nmin-height: 100vh;\nbackground-repeat: no-repeat;\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const HomeTitleWrapStyled = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  max-width: 600px;\n  margin: 100px auto;\ntext-align: center;\n`;\n\nexport const HomeTitleStyled = styled.h1`\n  font-size: 64px;\n  color: rgb(3, 3, 96);\n`;\n\nexport const PnoneSvgStyled = styled.span`\ncolor: rgb(125, 10, 183);\n`;"],"names":["ContactFormStyled","styled","ContactForm","onFormSubmit","useState","name","setName","number","setNumber","handleChange","e","target","value","onSubmit","preventDefault","onChange","type","pattern","title","required","ContactListStyled","props","contact","deleteContact","onClick","id","contacts","map","FilterStyled","Filter","filterValue","filterContact","event","SectionStyled","children","Contacts","dispatch","useDispatch","items","useSelector","selectContacts","filter","selectFilter","user","selectUser","isLoading","selectIsLoading","error","selectError","useEffect","getAllContactsThunk","filteredContacts","toLowerCase","includes","trim","contactData","find","alert","addContactThunk","filterName","filterContacts","Loader","length","deleteContactThunk","PagesStyled","HomeTitleWrapStyled","HomeTitleStyled","PnoneSvgStyled"],"sourceRoot":""}